"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const passport_1 = __importDefault(require("passport"));
const serviceReportRoutes_1 = __importDefault(require("./serviceReportRoutes"));
const commentRoutes_1 = __importDefault(require("./commentRoutes"));
const createServiceController_1 = __importDefault(require("../controllers/serviceControllers/createServiceController"));
const findServiceByIdController_1 = require("../controllers/serviceControllers/findServiceByIdController");
const findServiceByCategory_1 = require("../controllers/serviceControllers/findServiceByCategory");
const findAllInSubCategory_1 = require("../controllers/serviceControllers/findAllInSubCategory");
const getAllServicesController_1 = __importDefault(require("../controllers/serviceControllers/getAllServicesController"));
const deleteServiceByIdController_1 = __importDefault(require("../controllers/serviceControllers/deleteServiceByIdController"));
const updateServiceController_1 = __importDefault(require("../controllers/serviceControllers/updateServiceController"));
const router = express_1.default.Router();
router.use("/service/reports", serviceReportRoutes_1.default);
router.use("/service/comments", commentRoutes_1.default);
router.get("/", getAllServicesController_1.default);
router.get("/:category", findServiceByCategory_1.findServicesByCategory);
router.delete("/:serviceId", passport_1.default.authenticate("jwt", { session: false }), deleteServiceByIdController_1.default);
router.get("/service/:serviceId", findServiceByIdController_1.findServiceByIdController);
router.get("/subCategories/:subCategory", findAllInSubCategory_1.findAllInSubCategory);
router.post("/", passport_1.default.authenticate("jwt", { session: false }), createServiceController_1.default);
router.put("/:serviceId", passport_1.default.authenticate("jwt", { session: false }), updateServiceController_1.default);
exports.default = router;
